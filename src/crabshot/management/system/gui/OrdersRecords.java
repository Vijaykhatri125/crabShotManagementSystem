/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package crabshot.management.system.gui;

import crabshot.management.system.DBA.DBConnection;
import crabshot.management.system.DBA.DBManager;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Vijay P Khatri
 */
public class OrdersRecords extends javax.swing.JFrame {

    /**
     * Creates new form Expenses
     */
    static int updateOrderId=0;
    static int updateCustomerId=0;
    DefaultTableModel defaultTableModel;
    
    public OrdersRecords() {
        initComponents();
        setBounds(0, 0, 1315, 735);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logo = new javax.swing.JLabel();
        designeddeveloped = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        reciptDataTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderDataTable = new javax.swing.JTable();
        profitLabel = new javax.swing.JLabel();
        orderLabel1 = new javax.swing.JLabel();
        priceLabel = new javax.swing.JLabel();
        updateButton3 = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        updateButton2 = new javax.swing.JButton();
        deliveryLabel = new javax.swing.JLabel();
        costLabel = new javax.swing.JLabel();
        orderDate = new com.toedter.calendar.JDateChooser();
        orderLabel = new javax.swing.JLabel();
        receiptLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        logoutbutton = new javax.swing.JButton();
        mainmenubox = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crabshot/management/system/Images/logo.png"))); // NOI18N
        getContentPane().add(logo);
        logo.setBounds(550, 70, 220, 90);

        designeddeveloped.setFont(new java.awt.Font("Dotum", 1, 18)); // NOI18N
        designeddeveloped.setForeground(new java.awt.Color(51, 51, 51));
        designeddeveloped.setText("designed and developed by LogicsEase.com");
        getContentPane().add(designeddeveloped);
        designeddeveloped.setBounds(450, 660, 420, 40);

        jLabel2.setFont(new java.awt.Font("Dotum", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("ORDERS RECORD");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(480, 140, 370, 70);

        reciptDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.no", "Name", "Cost", "Price", "Quantity Selected", "Unit", "Total Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reciptDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reciptDataTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(reciptDataTable);
        if (reciptDataTable.getColumnModel().getColumnCount() > 0) {
            reciptDataTable.getColumnModel().getColumn(5).setResizable(false);
        }

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(710, 330, 530, 220);

        orderDataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S.no", "Name", "Number", "Order Id", "Customer Id", "Time", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderDataTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderDataTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderDataTable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 330, 620, 250);

        profitLabel.setText("Profit: 0");
        getContentPane().add(profitLabel);
        profitLabel.setBounds(1080, 570, 110, 14);

        orderLabel1.setFont(new java.awt.Font("Sertig", 1, 14)); // NOI18N
        orderLabel1.setText("Select Date: ");
        getContentPane().add(orderLabel1);
        orderLabel1.setBounds(460, 220, 90, 30);

        priceLabel.setText("Total Price: 0");
        getContentPane().add(priceLabel);
        priceLabel.setBounds(880, 570, 180, 14);

        updateButton3.setBackground(new java.awt.Color(153, 153, 255));
        updateButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateButton3.setForeground(new java.awt.Color(51, 51, 51));
        updateButton3.setText("GENERATE RECEIPT");
        updateButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton3);
        updateButton3.setBounds(1000, 600, 230, 31);

        deleteButton.setBackground(new java.awt.Color(153, 153, 255));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(51, 51, 51));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        getContentPane().add(deleteButton);
        deleteButton.setBounds(460, 600, 160, 31);

        addButton.setBackground(new java.awt.Color(153, 153, 255));
        addButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addButton.setForeground(new java.awt.Color(51, 51, 51));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        getContentPane().add(addButton);
        addButton.setBounds(100, 600, 160, 31);

        updateButton2.setBackground(new java.awt.Color(153, 153, 255));
        updateButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateButton2.setForeground(new java.awt.Color(51, 51, 51));
        updateButton2.setText("UPDATE");
        updateButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton2);
        updateButton2.setBounds(280, 600, 160, 31);

        deliveryLabel.setText("Delivery Charges:");
        getContentPane().add(deliveryLabel);
        deliveryLabel.setBounds(710, 550, 190, 14);

        costLabel.setText("Total Cost: 0");
        getContentPane().add(costLabel);
        costLabel.setBounds(710, 570, 150, 14);

        orderDate.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                orderDateAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        orderDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                orderDatePropertyChange(evt);
            }
        });
        orderDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                orderDateKeyPressed(evt);
            }
        });
        getContentPane().add(orderDate);
        orderDate.setBounds(560, 220, 270, 30);

        orderLabel.setFont(new java.awt.Font("Sertig", 1, 14)); // NOI18N
        orderLabel.setText("Orders:");
        getContentPane().add(orderLabel);
        orderLabel.setBounds(70, 280, 70, 30);

        receiptLabel.setFont(new java.awt.Font("Sertig", 1, 14)); // NOI18N
        receiptLabel.setText("Receipt:");
        getContentPane().add(receiptLabel);
        receiptLabel.setBounds(720, 280, 70, 30);

        backButton.setBackground(new java.awt.Color(204, 204, 204));
        backButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backButton.setForeground(new java.awt.Color(51, 51, 51));
        backButton.setText("BACK");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });
        getContentPane().add(backButton);
        backButton.setBounds(1060, 140, 200, 40);

        exitButton.setBackground(new java.awt.Color(204, 204, 204));
        exitButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        exitButton.setForeground(new java.awt.Color(51, 51, 51));
        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(exitButton);
        exitButton.setBounds(1060, 90, 200, 40);

        logoutbutton.setBackground(new java.awt.Color(204, 204, 204));
        logoutbutton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        logoutbutton.setForeground(new java.awt.Color(51, 51, 51));
        logoutbutton.setText("LOG OUT");
        logoutbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(logoutbutton);
        logoutbutton.setBounds(1060, 40, 200, 40);

        mainmenubox.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crabshot/management/system/Images/menu bg.png"))); // NOI18N
        getContentPane().add(mainmenubox);
        mainmenubox.setBounds(10, 10, 1320, 660);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/crabshot/management/system/Images/login background_2.jpg"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 1440, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitButtonActionPerformed

    private void logoutbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutbuttonActionPerformed
        // TODO add your handling code here:
        Login login = new Login();
        login.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logoutbuttonActionPerformed

    private void reciptDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reciptDataTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_reciptDataTableMouseClicked

    @SuppressWarnings("empty-statement")
    private void orderDataTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderDataTableMouseClicked
        // TODO add your handling code here:
        int count=0;
        try{
            int orderId=Integer.parseInt(this.orderDataTable.getValueAt(orderDataTable.getSelectedRow(), 3).toString());
            //int orderId=DBManager.getOrderId(orderNumber);
            ResultSet detailsResult=DBManager.getAllOrderDetails(orderId);
            deliveryCharges = DBManager.getOrderDelivery(orderId);
            updateOrderId = orderId;
            updateCustomerId = Integer.parseInt(this.orderDataTable.getValueAt(orderDataTable.getSelectedRow(), 4).toString());
            String proName="", proUnit="";
            double proPrice=0, proCost=0,quantity=0,totalP=0, totalC=0;
            this.reciptDataTable.removeAll();
            DefaultTableModel  model=(DefaultTableModel)this.reciptDataTable.getModel();
            model.setRowCount(0);
            totalPrice = 0;
            totalCost = 0;
            String unit = "";
            while(detailsResult.next()){
                count++;
                int proId=detailsResult.getInt("product_id");
                proName=DBManager.getProductName(proId);
                //proPrice=DBManager.getProductPrice(proName);
                //proCost=DBManager.getProductCost(proName);
                proCost=detailsResult.getDouble("cost");
                proPrice=detailsResult.getDouble("price");
                proUnit=DBManager.getProductUnit(proName);
                quantity=detailsResult.getDouble("quantity");
                //if(proUnit.equals("kg")) {
                //    quantity /= 1000;
                //}
                totalP=quantity*proPrice;
                totalP=Double.valueOf(df.format(totalP));
                totalC=quantity*proCost;
                Double.valueOf(df.format(totalC));
                
                totalPrice += totalP;
                totalPrice = Double.valueOf(df.format(totalPrice));
                totalCost += totalC;
                totalCost = Double.valueOf(df.format(totalCost));
                
                
                Object [] row={count,proName,proCost, proPrice,quantity, proUnit,totalP};
                model.addRow(row);
            }
            totalPrice += deliveryCharges;
            
            
        }catch(Exception e){
            e.printStackTrace();
        }
        showOrderInfo();
    }//GEN-LAST:event_orderDataTableMouseClicked

    private void orderDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_orderDateKeyPressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_orderDateKeyPressed

    private void orderDateAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_orderDateAncestorAdded
        // TODO add your handling code here:
        
    }//GEN-LAST:event_orderDateAncestorAdded

    private void orderDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_orderDatePropertyChange
        // TODO add your handling code here:
        try{
           // SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
           // String d = sdf.format(orderDate.getDate());
            int count=0;
            if(orderDate.getDate()==null){
            
            }
            else{
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                String d = sdf.format(orderDate.getDate());
                System.out.println(d); 
                ResultSet result = DBManager.fillOrderTable(d);
                String custName="", custNum="";
                int orderNo=0;
                int orderId=0;
                String time="",date="";
                DefaultTableModel  model=(DefaultTableModel)this.orderDataTable.getModel();
                model.setRowCount(0);
                DefaultTableModel  model2=(DefaultTableModel)this.reciptDataTable.getModel();
                model2.setRowCount(0);
                while(result.next()){
                    count++;
                    int id=result.getInt("cust_id");
                    orderNo=result.getInt("order_no");
                    orderId=result.getInt("order_id");
                    time= result.getString("time");
                    date=result.getString("date");
                    custName=DBManager.getCustomersName(id);
                    custNum=DBManager.getCustomerNumber(id);
                    Object[] row={count,custName,custNum,orderId,id,time,date};
                    model.addRow(row);
                }
                
                //defaultTableModel = buildTableModel(result);
               // this.orderDataTable.setModel(defaultTableModel);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_orderDatePropertyChange

    private void updateButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButton2ActionPerformed
        // TODO add your handling code here:
        if(updateOrderId == 0) {
            JOptionPane.showMessageDialog(null, "Please select an order");
        }
        else {
            new OrderUpdate().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_updateButton2ActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:
        new Order().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        int orderId=Integer.parseInt(this.orderDataTable.getValueAt(this.orderDataTable.getSelectedRow(), 3).toString());
        System.out.println("Order Id is : "+orderId);
        DBManager.restoreQuantity(orderId);
        DBManager.DeleteOrderDetails(orderId);
        DBManager.DeleteOrder(orderId);
        OrdersRecords od=new OrdersRecords();
        od.setVisible(true);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void updateButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButton3ActionPerformed
        // TODO add your handling code here:
        try {
            HashMap<String, Object> hm = new HashMap<String, Object>();
            hm.put("OrderId", updateOrderId);
            JasperPrint jasperPrint;
            Connection con = DBConnection.makeConnection();
            JasperReport jasperReport = JasperCompileManager.compileReport("./receipt1.jrxml");
            jasperPrint = JasperFillManager.fillReport(jasperReport, hm, con);
            //JasperViewer.viewReport(jasperPrint);
            JasperPrintManager.printReport(jasperPrint, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_updateButton3ActionPerformed

    public static DefaultTableModel buildTableModel(ResultSet rs)
            throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();

        // names of columns
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        // data of the table
        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }

        return new DefaultTableModel(data, columnNames);

    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdersRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdersRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdersRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdersRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrdersRecords().setVisible(true);
            }
        });
    }
    
    public void showOrderInfo() {
        costLabel.setText("Total Cost: Rs " + Double.valueOf(df.format(totalCost)) + "/=");
        priceLabel.setText("Total Price: Rs " + Double.valueOf(df.format(totalPrice)) + "/=");
        profitLabel.setText("Profit: Rs " + Double.valueOf(df.format((totalPrice - totalCost))) + "/=");
        deliveryLabel.setText("Delivery Charges: Rs " + deliveryCharges + "/=");
    }
    
    DecimalFormat df = new DecimalFormat("#.##");
    double totalPrice=0;
    double totalCost=0;
    static int deliveryCharges=0;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel background;
    private javax.swing.JLabel costLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel deliveryLabel;
    private javax.swing.JLabel designeddeveloped;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel logo;
    private javax.swing.JButton logoutbutton;
    private javax.swing.JLabel mainmenubox;
    private javax.swing.JTable orderDataTable;
    private com.toedter.calendar.JDateChooser orderDate;
    private javax.swing.JLabel orderLabel;
    private javax.swing.JLabel orderLabel1;
    private javax.swing.JLabel priceLabel;
    private javax.swing.JLabel profitLabel;
    private javax.swing.JLabel receiptLabel;
    private javax.swing.JTable reciptDataTable;
    private javax.swing.JButton updateButton2;
    private javax.swing.JButton updateButton3;
    // End of variables declaration//GEN-END:variables
}
